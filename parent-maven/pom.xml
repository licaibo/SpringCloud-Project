<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.2.RELEASE</version>
    </parent>

    <groupId>com.licaibo.spring.cloud</groupId>
    <artifactId>parent-maven</artifactId>
    <packaging>pom</packaging><!--父pom需要定义为pom类型 -->
    <version>1.0-SNAPSHOT</version>
    <name>parent-maven</name>

    <properties>
        <spring-cloud.version>Greenwich.RELEASE</spring-cloud.version>
        <spring-cloud-netflix-eureka-client.version>2.1.1.RELEASE</spring-cloud-netflix-eureka-client.version>
        <spring-cloud-netflix-eureka-server.version>2.1.1.RELEASE</spring-cloud-netflix-eureka-server.version>
        <mybatis-spring-boot.version>1.3.3</mybatis-spring-boot.version>
        <spring-boot-starter-jdbc.version>2.1.2.RELEASE</spring-boot-starter-jdbc.version>
        <pagehelper-spring-boot.version>1.2.10</pagehelper-spring-boot.version>
        <mysql-connector-java.version>8.0.15</mysql-connector-java.version>
        <druid-spring-boot-starter.version>1.1.10</druid-spring-boot-starter.version>
        <spring-cloud-config-server.version>2.1.4.RELEASE</spring-cloud-config-server.version>
    </properties>

    <!-- dependencyManagement标签下的依赖包，如果子模块不显示声明在dependency是不绘被引入，防止子模块因为继承父pom而引入不需要的依赖-->
    <dependencyManagement>
        <dependencies>

            <!-- import引入另外springcloud维护的的dependencyManagement-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
                <version>${spring-cloud-netflix-eureka-client.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
                <version>${spring-cloud-netflix-eureka-server.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-jdbc</artifactId>
                <version>${spring-boot-starter-jdbc.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector-java.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid-spring-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-config-server</artifactId>
                <version>${spring-cloud-config-server.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
    </dependencies>


<!--    <repositories>-->
<!--        <repository>-->
<!--            <snapshots>-->
<!--                <enabled>true</enabled>-->
<!--            </snapshots>-->
<!--            <id>public</id>-->
<!--            <name>Public Repositories</name>-->
<!--            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>-->
<!--        </repository>-->
<!--    </repositories>-->

    <!-- maven deploy 默认是SNAPSHOT后缀的会打包至快照仓库。生产打包可以指定打包至稳定版本releases仓库 -->
    <!--
        snapshots（快照） : 仓库用于开发阶段，即使不改变版本号，maven deploy每次会去更新最新代码，适用于开发阶段代码频繁的改动
        releases（稳定版本） ： 即使改变代码内容，只要版本号不变，maven deploy也不会去更新最新代码，适用于发布生产稳定版本
    -->
    <!-- 配置打包至虚拟机nexus私服 id必须和maven setting.xml中server配置的ID一样，否则会找不到nexus私服报错401-->
    <distributionManagement>
        <repository>
            <id>mac-ubuntu</id>
            <name>Releases</name>
            <url>http://10.211.55.5:8081/repository/maven-releases/</url>
        </repository>
        <snapshotRepository>
            <id>mac-ubuntu</id>
            <name>Snapshot</name>
            <url>http://10.211.55.5:8081/repository/maven-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>



</project>